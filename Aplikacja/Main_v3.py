from PyQt5 import QtCore, QtGui, QtWidgets
from transformers import GPT2LMHeadModel
from transformers import GPT2Tokenizer
from datasets import load_dataset
import random
import evaluate





def generate_text(sequence, max_new_tokens, min_new_tokens, temperature, top_k, top_p, rep_penalty, model_trained):
    if model_trained:
        model = GPT2LMHeadModel.from_pretrained("Aplikacja/outputdir2")
        print("Użyto modelu wytrenowanego.")
        print("Konfiguracja:" +  "\nmax_new_tokens - " + str(max_new_tokens) + "\nmin_new_tokens - " + str(min_new_tokens) + "\ntemperature - " + str(temperature) + "\ntop_k - " + str(top_k) + "\ntop_p - " + str(top_p) + "\nrepetitoin_penalty - " + str(rep_penalty) + "\nTrained Model - " + str(model_trained))
    else:
        model = GPT2LMHeadModel.from_pretrained("gpt2")
        print("Użyto zwykłego modelu.")
        print("Konfiguracja:" +  "\nmax_new_tokens - " + str(max_new_tokens) + "\nmin_new_tokens - " + str(min_new_tokens) + "\ntemperature - " + str(temperature) + "\ntop_k - " + str(top_k) + "\ntop_p - " + str(top_p) + "\nrepetitoin_penalty - " + str(rep_penalty) + "\nTrained Model - " + str(model_trained))
    
    text = "\n\nSummarize: " + sequence + "\n\n"
    input = tokenizer(text, return_tensors='pt', truncation=True, padding=True)
    output = model.generate(input["input_ids"], attention_mask=input["attention_mask"], max_new_tokens = max_new_tokens, do_sample=True, min_new_tokens=min_new_tokens, temperature = temperature, top_k = top_k, top_p = top_p, repetition_penalty = rep_penalty, pad_token_id=tokenizer.eos_token_id)[0]

    return  tokenizer.decode(output)[len(text):]

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("GPT-2 Summarization")
        MainWindow.resize(618, 464)
        MainWindow.setStyleSheet("background-color: rgb(88, 88, 88);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Sumaryzacja = QtWidgets.QTextEdit(self.centralwidget)
        self.Sumaryzacja.setGeometry(QtCore.QRect(110, 210, 240, 210))
        self.Sumaryzacja.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.Sumaryzacja.setObjectName("Sumaryzacja")
        self.Sumaryzacja_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.Sumaryzacja_2.setGeometry(QtCore.QRect(360, 210, 250, 165))
        self.Sumaryzacja_2.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.Sumaryzacja_2.setObjectName("Sumaryzacja_2")
        self.sentText = QtWidgets.QPushButton(self.centralwidget)
        self.sentText.setGeometry(QtCore.QRect(10, 10, 75, 25))
        self.sentText.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.sentText.setObjectName("sentText")
        self.TekstDlugi = QtWidgets.QTextEdit(self.centralwidget)
        self.TekstDlugi.setGeometry(QtCore.QRect(110, 9, 500, 180))
        self.TekstDlugi.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.TekstDlugi.setObjectName("TekstDlugi")
        self.MaxGeneration = QtWidgets.QSpinBox(self.centralwidget)
        self.MaxGeneration.setGeometry(QtCore.QRect(10, 90, 48, 20))
        self.MaxGeneration.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.MaxGeneration.setMaximum(1000)
        self.MaxGeneration.setMinimum(10)
        self.MaxGeneration.setSingleStep(10)
        self.MaxGeneration.setProperty("value", 200)
        self.MaxGeneration.setObjectName("MaxGeneration")
        self.basicModel = QtWidgets.QRadioButton(self.centralwidget)
        self.basicModel.setGeometry(QtCore.QRect(10, 400, 82, 17))
        self.basicModel.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.basicModel.setObjectName("basicModel")
        self.trainingModel = QtWidgets.QRadioButton(self.centralwidget)
        self.trainingModel.setGeometry(QtCore.QRect(10, 370, 91, 17))
        self.trainingModel.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.trainingModel.setChecked(True)
        self.trainingModel.setObjectName("trainingModel")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 70, 91, 16))
        self.label.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 120, 91, 16))
        self.label_2.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_2.setObjectName("label_2")
        self.MinGeneration = QtWidgets.QSpinBox(self.centralwidget)
        self.MinGeneration.setGeometry(QtCore.QRect(10, 140, 48, 20))
        self.MinGeneration.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.MinGeneration.setMaximum(500)
        self.MinGeneration.setSingleStep(10)
        self.MinGeneration.setProperty("value", 10)
        self.MinGeneration.setObjectName("MinGeneration")
        self.Temperature = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.Temperature.setGeometry(QtCore.QRect(10, 190, 48, 20))
        self.Temperature.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.Temperature.setDecimals(1)
        self.Temperature.setMaximum(2.0)
        self.Temperature.setMinimum(0.1)
        self.Temperature.setSingleStep(0.1)
        self.Temperature.setProperty("value", 1.0)
        self.Temperature.setObjectName("Temperature")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 170, 81, 16))
        self.label_3.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_3.setObjectName("label_3")
        self.top_k = QtWidgets.QSpinBox(self.centralwidget)
        self.top_k.setGeometry(QtCore.QRect(10, 240, 48, 20))
        self.top_k.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.top_k.setMaximum(50)
        self.top_k.setMinimum(0)
        self.top_k.setProperty("value", 50)
        self.top_k.setObjectName("top_k")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 220, 31, 16))
        self.label_4.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(10, 270, 31, 16))
        self.label_5.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(10, 320, 61, 16))
        self.label_6.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_6.setObjectName("label_6")
        self.top_p = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.top_p.setGeometry(QtCore.QRect(10, 290, 48, 20))
        self.top_p.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.top_p.setDecimals(1)
        self.top_p.setMaximum(1.0)
        self.top_p.setMinimum(0)
        self.top_p.setSingleStep(0.1)
        self.top_p.setProperty("value", 1.0)
        self.top_p.setObjectName("top_p")
        self.repetition_penality = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.repetition_penality.setGeometry(QtCore.QRect(10, 340, 48, 20))
        self.repetition_penality.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.repetition_penality.setDecimals(1)
        self.repetition_penality.setMaximum(5.0)
        self.repetition_penality.setMinimum(0)
        self.repetition_penality.setSingleStep(0.1)
        self.repetition_penality.setProperty("value", 1.0)
        self.repetition_penality.setObjectName("repetition_penality")
        self.randomText = QtWidgets.QPushButton(self.centralwidget)
        self.randomText.setGeometry(QtCore.QRect(10, 40, 75, 25))
        self.randomText.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.randomText.setObjectName("randomText")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(110, 190, 240, 20))
        self.label_7.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(360, 190, 240, 20))
        self.label_8.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_8.setObjectName("label_8")
        self.rouge1 = QtWidgets.QLCDNumber(self.centralwidget)
        self.rouge1.setGeometry(QtCore.QRect(360, 395, 55, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.rouge1.setFont(font)
        self.rouge1.setSmallDecimalPoint(False)
        self.rouge1.setSegmentStyle(QtWidgets.QLCDNumber.Outline)
        self.rouge1.setObjectName("rouge1")
        self.rouge2 = QtWidgets.QLCDNumber(self.centralwidget)
        self.rouge2.setGeometry(QtCore.QRect(425, 395, 55, 25))
        self.rouge2.setSmallDecimalPoint(False)
        self.rouge2.setObjectName("rouge2")
        self.rougel = QtWidgets.QLCDNumber(self.centralwidget)
        self.rougel.setGeometry(QtCore.QRect(490, 395, 55, 25))
        self.rougel.setSmallDecimalPoint(False)
        self.rougel.setObjectName("rougel")
        self.rougesum = QtWidgets.QLCDNumber(self.centralwidget)
        self.rougesum.setGeometry(QtCore.QRect(555, 395, 55, 25))
        self.rougesum.setSmallDecimalPoint(False)
        self.rougesum.setObjectName("rougesum")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(360, 375, 55, 16))
        self.label_9.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(425, 375, 55, 16))
        self.label_10.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(490, 375, 55, 16))
        self.label_11.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(555, 375, 61, 16))
        self.label_12.setStyleSheet("font: 75 8pt \"Consolas\";")
        self.label_12.setObjectName("label_12")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 618, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Connect the button click signal to the custom function
        self.sentText.clicked.connect(self.setSum)
        self.randomText.clicked.connect(self.setSumRandom)

    def setSum(self):

        modelWynik = generate_text(self.TekstDlugi.toPlainText(),self.MaxGeneration.value(),self.MinGeneration.value(),self.Temperature.value(),self.top_k.value(),self.top_p.value(),self.repetition_penality.value(),self.trainingModel.isChecked())
        rougeWynik = rouge.compute(predictions=[modelWynik],references=[self.Sumaryzacja_2.toPlainText()])

        self.Sumaryzacja.setText(modelWynik)
        self.rouge1.display(rougeWynik['rouge1'])
        self.rouge2.display(rougeWynik['rouge2'])
        self.rougel.display(rougeWynik['rougeL'])
        self.rougesum.display(rougeWynik['rougeLsum'])



    def setSumRandom(self):
        losowa_liczba = random.randint(1, len(billsumTest)) - 1
        text = billsumTest[losowa_liczba]['document']
        modelWynik = generate_text(text,self.MaxGeneration.value(),self.MinGeneration.value(),self.Temperature.value(),self.top_k.value(),self.top_p.value(),self.repetition_penality.value(),self.trainingModel.isChecked())
        etykietaWynik = billsumTest[losowa_liczba]["summary"]
        rougeWynik = rouge.compute(predictions=[modelWynik],references=[etykietaWynik])

        self.TekstDlugi.setText(text)
        self.Sumaryzacja.setText(modelWynik)
        self.Sumaryzacja_2.setText(billsumTest[losowa_liczba]["summary"])
        self.rouge1.display(rougeWynik['rouge1'])
        self.rouge2.display(rougeWynik['rouge2'])
        self.rougel.display(rougeWynik['rougeL'])
        self.rougesum.display(rougeWynik['rougeLsum'])

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "GPT-2 Summarization"))
        self.sentText.setText(_translate("MainWindow", "Prześlij tekst"))
        self.TekstDlugi.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Wprowadź tekst do sumaryzacji</p></body></html>"))
        self.basicModel.setText(_translate("MainWindow", "Basic model"))
        self.trainingModel.setText(_translate("MainWindow", "Trained model"))
        self.label.setText(_translate("MainWindow", "Max generation"))
        self.label_2.setText(_translate("MainWindow", "Min generation"))
        self.label_3.setText(_translate("MainWindow", "Temperature"))
        self.label_4.setText(_translate("MainWindow", "top_k"))
        self.label_5.setText(_translate("MainWindow", "top_p"))
        self.label_6.setText(_translate("MainWindow", "rep_penalty"))
        self.randomText.setText(_translate("MainWindow", "Losowy tekst"))
        self.label_7.setText(_translate("MainWindow", "Sumaryzacja wygenerowana:"))
        self.label_8.setText(_translate("MainWindow", "Sumaryzacja z etykiety:"))
        self.label_9.setText(_translate("MainWindow", "ROUGE 1"))
        self.label_10.setText(_translate("MainWindow", "ROUGE 2"))
        self.label_11.setText(_translate("MainWindow", "ROUGE-L"))
        self.label_12.setText(_translate("MainWindow", "ROUGESUM"))


if __name__ == "__main__":
    billsumTest = load_dataset("xsum", split="test[:1%]").filter(lambda x: len(x["document"]) <= 1000)
    rouge = evaluate.load("rouge")
    tokenizer = GPT2Tokenizer.from_pretrained("gpt2", max_length=1000, padding_side='left')
    tokenizer.pad_token = tokenizer.eos_token
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
